/*
===============================================================================
Measures Exploration (Key Metrics)
===============================================================================
Purpose:
    - To calculate aggregated metrics (e.g., totals, averages) for quick insights.
    - To identify overall trends or spot anomalies.

SQL Functions Used:
    - COUNT(), SUM(), AVG()
===============================================================================
*/


------Find the total sales
SELECT
SUM(sales_amount) AS Total_sales
FROM gold.fact_sales;

------Find how many items are sold
SELECT
SUM(quantity) AS Total_quantity
FROM gold.fact_sales;

------Find the average selling price
SELECT
AVG(price) AS Avg_price
FROM gold.fact_sales;

------Find the total number of orders
SELECT
COUNT(DISTINCT(order_number))AS Total_orders
FROM gold.fact_sales;

------Find the total number of products
SELECT
COUNT(DISTINCT(product_name)) AS Total_products
FROM gold.dim_products;

------Find the total number of customers
SELECT
COUNT(customer_key) AS Total_customers
FROM gold.dim_customers;

------Find the total number of customers that has placed an order 
SELECT
COUNT(DISTINCT(customer_key)) AS Total_customers
FROM gold.fact_sales;


------Generate a report that shows all key matrics of the business
SELECT
'Total sales' AS 'Measure_name',
SUM(sales_amount) AS 'Measure_value'
FROM gold.fact_sales
UNION ALL

SELECT
'Total quantity' AS 'Measure_name',
SUM(quantity) AS 'Measure_value'
FROM gold.fact_sales
UNION ALL

SELECT
'Average price'AS 'Measure_name',
AVG(price) AS 'Measure_value'
FROM gold.fact_sales
UNION ALL  

SELECT
'Total number of orders' AS 'Measure_name',
COUNT(DISTINCT(order_number))AS 'Measure_value'
FROM gold.fact_sales
UNION ALL

SELECT
'Total number of products' AS 'Measure_name',
COUNT(DISTINCT(product_name)) AS 'Measure_value'
FROM gold.dim_products
UNION ALL

SELECT
'Total number of customers' AS 'Measure_name',
COUNT(DISTINCT(customer_key)) AS 'Measure_value'
FROM gold.fact_sales;

















